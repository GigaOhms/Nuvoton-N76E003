C51 COMPILER V9.60.0.0   GPIO                                                              01/12/2024 11:40:59 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE GPIO
OBJECT MODULE PLACED IN .\Output\GPIO.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Code\GPIO.C OPTIMIZE(8,SPEED) BROWSE INCDIR(..\..\Include;..\..\LIB) DEF
                    -INE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\LST\GPIO.lst) OBJECT(.\Output\GPIO.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* Copyright(c) 2017 Nuvoton Technology Corp. All rights reserved.                                        
             - */
   4          /*                                                                                                        
             - */
   5          /*--------------------------------------------------------------------------------------------------------
             --*/
   6          
   7          //********************************************************************************************************
             -***
   8          //  Website: http://www.nuvoton.com
   9          //  E-Mail : MicroC-8bit@nuvoton.com
  10          //  Date   : Jan/21/2017
  11          //********************************************************************************************************
             -***
  12          
  13          //********************************************************************************************************
             -***
  14          //  File Function: N76E003 GPIO demo code
  15          //********************************************************************************************************
             -***
  16          #include "N76E003.h"
  17          #include "SFR_Macro.h"
  18          #include "Function_define.h"
  19          #include "Common.h"
  20          #include "Delay.h"
  21          
  22          #include "avr.h"
  23          #include "TM1637.h"
  24          #include "ModbusRTU.h"
  25          
  26          
  27          
  28          // ----------------- DATA SLA --------------------------
  29          uint8_t error1 = 0, error2 = 0, error3 = 0, error4 = 0;
  30          uint8_t id = 0x1;
  31          uint16_t counter = 0;
  32          uint8_t dataSend[15];
  33          
  34          
  35          // -------------- SERIAL MODBUS VARIABLE -------------------
  36          #define sumSize 15U             // them 2 byte checkSum la 17
  37          #define sizeData 14U
  38          
  39          
  40          uint8_t serial_available() {
  41   1              return RI ? 1 : 0;
  42   1      }
  43          
  44          uint8_t serial_read() {
  45   1              uint8_t c = SBUF;
C51 COMPILER V9.60.0.0   GPIO                                                              01/12/2024 11:40:59 PAGE 2   

  46   1              RI = 0;
  47   1              return c;
  48   1      }
  49          
  50          
  51          
  52          void main (void) {              
  53   1              InitialUART0_Timer3(9600);      
  54   1              
  55   1              dataSend[0] = id;
  56   1              dataSend[1] = 0x3;              // value READ HOLDING REGISTERS
  57   1              dataSend[2] = 0xc;              // size of Data
  58   1              dataSend[3] = 0x0;              //highByte(error1);
  59   1              dataSend[5] = 0x0;              //highByte(error2);
  60   1              dataSend[7] = 0x0;              //highByte(error3);
  61   1              dataSend[9] = 0x0;              //highByte(error4);
  62   1              dataSend[13] = 0x0;             //highByte(id);
  63   1              
  64   1              dataSend[4] = lowByte(error1);
  65   1              dataSend[6] = lowByte(error2);
  66   1              dataSend[8] = lowByte(error3);
  67   1              dataSend[10] = lowByte(error4);
  68   1              dataSend[11] = highByte(counter);
  69   1              dataSend[12] = lowByte(counter);
  70   1              dataSend[14] = lowByte(id);
  71   1              
  72   1              sendDataModbusRTU(dataSend, sumSize);
  73   1              
  74   1              
  75   1              while(1)
  76   1              {       
  77   2              }
  78   1      }
  79          
  80          
  81          
  82          // ------------------------ END of main ------------------------------------
  83          
  84          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     86    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     22    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
